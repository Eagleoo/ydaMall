//Plugins
plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'com.android.library'



//Quality Standards
apply from: rootProject.file('config.gradle')

final String GROUP_ID = "com.tapadoo.android"
final String VERSION      = "2.0.5"
final String DESCRIPTION  = "An Android Alerting Library"
final String GITHUB_URL   = "https://github.com/Tapadoo/Alerter"

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.1'

    defaultConfig {
        minSdkVersion    16
        targetSdkVersion 27

        versionCode 1
        versionName VERSION

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

//BinTray configuration - credentials stored in user's gradle.properties
//bintray {
//    user = getBinTrayUser()
//    key  = getBinTrayKey()
//
//    publications = ['Alerter']
//
//    pkg {
//        repo            = 'maven'
//        name            = project.getName()
//        desc            = DESCRIPTION
//        vcsUrl          = GITHUB_URL + '.git'
//        websiteUrl      = GITHUB_URL
//        issueTrackerUrl = GITHUB_URL + '/issues'
//        licenses        = ['MIT']
//        publish         = true
//
//        version {
//            name     = VERSION // Version name i.e. "1.0"
//            desc     = DESCRIPTION
//            vcsTag   = VERSION
//            released = new Date()
//        }
//    }
//}

// Create the POM configuration - required for jCenter uploading
def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
}

// Create the publication with the pom configuration:


configurations {
    javadocDeps
}

dependencies {
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation "com.android.support:support-annotations:27.0.1"

    // Local Unit Tests - in src/test
//    testImplementation rootProject.ext.libs.junit
//
//    // Instrumentation Tests - in src/androidTest
//    androidTestImplementation rootProject.ext.libs.junit
//    androidTestImplementation rootProject.ext.libs.rules
//    androidTestImplementation rootProject.ext.libs.hamcrest
//    androidTestImplementation rootProject.ext.libs.espresso
//    androidTestImplementation rootProject.ext.libs.runner
//    androidTestImplementation rootProject.ext.libs.uiautomator
//    androidTestImplementation(rootProject.ext.libs.espresso, {
//        exclude group: 'com.android.support', module: 'support-annotations'
//    })
//
//    //Javadocs References
//    javadocDeps rootProject.ext.libs.support_annotations
//    javadocDeps rootProject.ext.libs.support_v4
//    javadocDeps rootProject.ext.libs.appcompat_v7
}

bintrayUpload.dependsOn 'generatePomFileForAlerterPublication'

//task showBintrayProps {
//    doLast {
//        println "Bintray user/password: ${getBinTrayUser()}/${getBinTrayKey()}"
//    }
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    failOnError true
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    classpath += configurations.compile
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//def final getBinTrayUser() {
//    final String BINTRAY_USER = "BINTRAY_USER"
//    return project.hasProperty(BINTRAY_USER)? project.getProperty(BINTRAY_USER) : null
//}
//
//def final getBinTrayKey() {
//    final String BINTRAY_KEY  = "BINTRAY_KEY"
//    return project.hasProperty(BINTRAY_KEY)? project.getProperty(BINTRAY_KEY) : null
//}
